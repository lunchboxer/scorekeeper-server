type User @model {
  id: ID! @isUnique
  name: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  email: String! @isUnique
  password: String!
}

type Student @model {
  id: ID! @isUnique
  createdAt: DateTime!
  updatedAt: DateTime!
  chineseName: String!
  englishName: String
  pinyinName: String
  dateOfBirth: DateTime
  gender: Gender
  group: Group! @relation(name: "StudentInGroup")
  points: [Point!]! @relation(name: "PointOnStudent")
  attendances: [Attendance!]! @relation(name: "AttendanceOnStudent")
}

# Used in Student type
enum Gender {
  M
  F
}

type Group @model {
  # a group of students attending class together
  id: ID! @isUnique
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String!
  students: [Student!]! @relation(name: "StudentInGroup")
  classSessions: [ClassSession!]! @relation(name: "ClassSessionOnGroup")
}

type Point @model {
  # points awarded to students during the lesson, can be positive or negative
  id: ID! @isUnique
  createdAt: DateTime!
  value: Int! @defaultValue(value: 1)
  student: Student! @relation(name: "PointOnStudent")
  classSession: ClassSession @relation(name: "PointOnClassSession")
}

type ClassSession @model {
  id: ID! @isUnique
  createdAt: DateTime!
  updatedAt: DateTime!
  startsAt: DateTime!
  endsAt: DateTime!
  groups: [Group!]! @relation(name: "ClassSessionOnGroup")
  points: [Point!]! @relation(name: "PointOnClassSession")
  attendances: [Attendance!]! @relation(name: "AttendanceOnClassSession")
  stage: Stage! @defaultValue(value: Innactive)
}

# used in ClassSession
enum Stage {
  Innactive # scheduled, but teacher hasn't viewed
  Active # preclass, time for attendance
  Started # class time
  Ended # teacher has ended the class
}

type Attendance @model {
  classSession: ClassSession! @relation(name: "AttendanceOnClassSession")
  createdAt: DateTime!
  id: ID! @isUnique
  student: Student! @relation(name: "AttendanceOnStudent")
  updatedAt: DateTime!
  status: AttendaceStatus!
}

# used in Attendance
enum AttendaceStatus {
  LeftEarly
  Present
  Late
  Absent
}
